import com.github.jengelman.gradle.plugins.shadow.tasks.ShadowJar
import com.gtnewhorizons.retrofuturagradle.mcp.ReobfuscatedJar

plugins {
    id 'com.gradleup.shadow' version '8.3.0'
    id 'com.gtnewhorizons.retrofuturagradle' version '1.4.5'
}

java {
    toolchain {
        languageVersion.set(JavaLanguageVersion.of(8))
    }
}

minecraft {
    mcVersion = "1.7.10"

    injectedTags.put("VERSION", project.pluginVersion)
}

tasks.injectTags.configure {
    outputClassName.set("me.lucko.spark.forge.Tags")
}

mcpTasks {
    deobfuscationATs.from(file("src/main/resources/META-INF/spark_at.cfg"))
}

configurations {
    shade
    implementation.extendsFrom shade
}

dependencies {
    shade project(':spark-common')
}

processResources {
    from(sourceSets.main.resources.srcDirs) {
        include 'mcmod.info'
        expand (
                'pluginVersion': project.pluginVersion,
                'pluginDescription': project.pluginDescription
        )
    }
}

jar {
    manifest {
        attributes 'FMLAT': 'spark_at.cfg'
    }
}

shadowJar {
    archiveClassifier = "fat-dev"
    configurations = [project.configurations.shade]

    relocate 'okio', 'me.lucko.spark.lib.okio'
    relocate 'okhttp3', 'me.lucko.spark.lib.okhttp3'
    relocate 'net.kyori.adventure', 'me.lucko.spark.lib.adventure'
    relocate 'net.kyori.examination', 'me.lucko.spark.lib.adventure.examination'
    relocate 'net.bytebuddy', 'me.lucko.spark.lib.bytebuddy'
    relocate 'org.tukaani.xz', 'me.lucko.spark.lib.xz'
    relocate 'com.google.protobuf', 'me.lucko.spark.lib.protobuf'
    relocate 'org.objectweb.asm', 'me.lucko.spark.lib.asm'
    relocate 'one.profiler', 'me.lucko.spark.lib.asyncprofiler'
    relocate 'me.lucko.bytesocks.client', 'me.lucko.spark.lib.bytesocks'
    relocate 'com.neovisionaries.ws', 'me.lucko.spark.lib.websockets'

    exclude 'module-info.class'
    exclude 'META-INF/maven/**'
    exclude 'META-INF/proguard/**'
}

tasks.named("reobfJar", ReobfuscatedJar) {
    archiveFileName = "spark-${project.pluginVersion}-forge-1.7.10.jar"
    inputJar.set(tasks.named("shadowJar", ShadowJar).map { it.archiveFile }.get())
}
