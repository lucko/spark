import org.cadixdev.gradle.licenser.LicenseExtension

plugins {
    id 'com.google.protobuf' version '0.9.1'
}

sourceSets {
    java11 {
        java {
            srcDirs = ['src/main/java11']
        }
    }
}

compileJava11Java {
    options.release = 11
}

jar {
    into('META-INF/versions/11') {
        from sourceSets.java11.output
    }
}

license {
    exclude '**/sampler/async/jfr/**'
}

extensions.configure(LicenseExtension.class) {
    it.exclude {
        it.file.toString().startsWith(buildDir.toString())
    }
}

dependencies {
    api project(':spark-api')
    implementation 'com.github.jvm-profiling-tools:async-profiler:v2.8.3'
    implementation 'org.ow2.asm:asm:9.1'
    implementation 'net.bytebuddy:byte-buddy-agent:1.11.0'

    implementation 'com.google.protobuf:protobuf-javalite:3.21.11'
    java11Implementation 'com.google.protobuf:protobuf-javalite:3.21.11'

    api('net.kyori:adventure-api:4.12.0') {
        exclude(module: 'adventure-bom')
        exclude(module: 'checker-qual')
        exclude(module: 'annotations')
    }
    api('net.kyori:adventure-text-serializer-gson:4.12.0') {
        exclude(module: 'adventure-bom')
        exclude(module: 'adventure-api')
        exclude(module: 'gson')
    }
    api('net.kyori:adventure-text-serializer-legacy:4.12.0') {
        exclude(module: 'adventure-bom')
        exclude(module: 'adventure-api')
    }
    implementation('net.kyori:adventure-text-feature-pagination:4.0.0-SNAPSHOT') {
        exclude(module: 'adventure-api')
    }
    compileOnly 'com.google.code.gson:gson:2.7'
    compileOnly 'com.google.guava:guava:19.0'
    compileOnly 'org.checkerframework:checker-qual:3.8.0'

    java11Implementation files(sourceSets.main.output.classesDirs) { builtBy compileJava }
}

protobuf {
    protoc {
        artifact = 'com.google.protobuf:protoc:3.21.11'
    }
    generateProtoTasks {
        all().each { task ->
            task.builtins {
                java {
                    option 'lite'
                }
            }
        }
    }
}
